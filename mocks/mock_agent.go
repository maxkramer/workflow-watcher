// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-interstellar/workflow-watcher/pkg/metrics (interfaces: Agent)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	metrics "github.com/project-interstellar/workflow-watcher/pkg/metrics"
	reflect "reflect"
)

// MockAgent is a mock of Agent interface
type MockAgent struct {
	ctrl     *gomock.Controller
	recorder *MockAgentMockRecorder
}

// MockAgentMockRecorder is the mock recorder for MockAgent
type MockAgentMockRecorder struct {
	mock *MockAgent
}

// NewMockAgent creates a new mock instance
func NewMockAgent(ctrl *gomock.Controller) *MockAgent {
	mock := &MockAgent{ctrl: ctrl}
	mock.recorder = &MockAgentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAgent) EXPECT() *MockAgentMockRecorder {
	return m.recorder
}

// IncrementCounter mocks base method
func (m *MockAgent) IncrementCounter(arg0 metrics.Metric, arg1 float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrementCounter", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrementCounter indicates an expected call of IncrementCounter
func (mr *MockAgentMockRecorder) IncrementCounter(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementCounter", reflect.TypeOf((*MockAgent)(nil).IncrementCounter), arg0, arg1)
}
